/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/current/userguide/tutorial_java_projects.html
 */
buildscript {
    ext {}

    repositories {
        jcenter()
//        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ("io.spring.gradle:dependency-management-plugin:${dependencyManagementPluginVersion}")

        classpath( "com.bmuschko:gradle-docker-plugin:latest.release" )
    }
}

apply plugin: "application"

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"

apply plugin: "io.spring.dependency-management"

//apply from: "${rootDir}/config/docker.gradle"

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin
apply plugin: com.bmuschko.gradle.docker.DockerJavaApplicationPlugin

// import task classes
import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*


repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }

    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/libs-milestone" }

    maven { url "https://repo.spring.io/libs-snapshot" }
    maven { url "https://repo.spring.io/snapshot" }
}

//-----------------------------------------------------------------------//

dependencies {

    // Security:
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("org.springframework.security:spring-security-test")

    // Config Server
    compile("org.springframework.cloud:spring-cloud-config-server")

    // Tools
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-actuator-docs")
    runtime("org.springframework.boot:spring-boot-devtools")

    compile("org.springframework.boot:spring-boot-configuration-processor")


    // Testing
    testCompile("org.springframework.boot:spring-boot-starter-test")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
//        mavenBom("io.spring.platform:platform-bom:${springIoVersion}")
    }
}

//---------------------------------------------------------------------------//

jar {
    baseName = "configserver"
    version =  "${this.version}"
}

task("execJar", type:Jar, dependsOn: "jar") {
    baseName = "configserver"
    version =  "${this.version}"
    classifier = "exec"
    from sourceSets.main.output
}

bootRepackage  {
    withJarTask = tasks["execJar"]
}

dockerDistTar {
    instruction {'RUN ls -la'}
    environmentVariable('JAVA_OPTS', '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap')
}
docker {
    javaApplication {
    }
}

project.tasks.getByName("dockerDistTar").instructionsFromTemplate file("Dockerfile")


//---------------------------------------------------------------------------//
